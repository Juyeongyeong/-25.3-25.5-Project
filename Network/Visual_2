#네트워크 시각화 
def visualize_network(x):
  degree_centrality, avg_degree_centrality, density, G = get_network_info(x)

  # --- 시각화용 위치 계산 ---
  pos = nx.spring_layout(G, seed=42)

  # 엣지 좌표 계산
  edge_x = []
  edge_y = []
  for u, v in G.edges():
      x0, y0 = pos[u]
      x1, y1 = pos[v]
      edge_x += [x0, x1, None]
      edge_y += [y0, y1, None]

  edge_trace = go.Scatter(
      x=edge_x, y=edge_y,
      line=dict(width=1, color='#888'),
      hoverinfo='none',
      mode='lines'
  )

  # 노드 좌표 및 정보
  node_x = []
  node_y = []
  hover_text = []

  for node in G.nodes():
      x, y = pos[node]
      node_x.append(x)
      node_y.append(y)
      centrality = degree_centrality[node]
      hover_text.append(f'고객 ID: {node}<br>연결 중심성: {centrality:.3f}')

  node_trace = go.Scatter(
      x=node_x, y=node_y,
      mode='markers+text',
      hoverinfo='text',
      textposition='top center',
      text=[str(node) for node in G.nodes()],
      marker=dict(
          showscale=True,
          colorscale='YlGnBu',
          color=[degree_centrality[node] for node in G.nodes()],
          size=20,
          colorbar=dict(
              thickness=15,
              title='연결 중심성',
              xanchor='left',
              titleside='right'
          ),
          line_width=2
      ),
      textfont=dict(size=10),
      hovertext=hover_text
  )

  # --- 그래프 그리기 ---
  fig = go.Figure(data=[edge_trace, node_trace],
                  layout=go.Layout(
                      title='<b>고객 네트워크 그래프 (Plotly)</b>',
                      titlefont_size=16,
                      showlegend=False,
                      hovermode='closest',
                      margin=dict(b=20, l=5, r=5, t=40),
                      annotations=[dict(
                          text=f"네트워크 밀도: {density:.3f} | 평균 연결 중심성: {avg_degree_centrality:.3f}",
                          showarrow=False,
                          xref="paper", yref="paper",
                          x=0.5, y=0, xanchor='center', yanchor='top',
                          font=dict(size=12)
                      )],
                      xaxis=dict(showgrid=False, zeroline=False, showticklabels=False),
                      yaxis=dict(showgrid=False, zeroline=False, showticklabels=False)
                  ))

  fig.show()

#Analytics_1 참고 및 실행 이후 시도
def customer_network(original_df, cluster_num, threshold=0.2):
  corr = get_corr_df_by_segment(original_df, cluster_num)
  corr_one_hot = one_hot_encoding_by_threshold(corr, threshold)
  visualize_network(corr_one_hot)

customer_network(a, 3, 0.30)
